/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

//library that we use to this project
import java.awt.HeadlessException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import static java.lang.System.getLogger;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Nola and Bakpia
 */
public class patient_register2 extends javax.swing.JFrame {
    String a, b, c, d, e, f, g, h, i;//multiple variables with alphabetic names from 'a' to 'i' are declared as strings.
    
    // multiple variables with different names are declared as integers.
    int personal, insurance, price, nmnm, total, money, change;
    /**
     * Creates new form FeesSystem
     */
    
    private void blank_form(){
        
        //These actions are likely used to reset or clear the values or selections in the respective components and fields, typically as part of a patient interface reset or initialization process.
        checkdate.setDate(null);
        time.setSelectedItem(null);
        diseaseList.clearSelection();
        payment.clearSelection();
        txt_price.setText(null);
        txt_checkup.setText(null);
        txt_total.setText(null);
        txt_money.setText(null);
        txt_change.setText(null);
        txt_receipt.setText(null);
        
        //By setting the enabled state to true, these text fields will become interactive, enabling users to enter or modify values. 
         txt_price.setEnabled(true);
         txt_total.setEnabled(true);
         txt_money.setEnabled(true);
         txt_change.setEnabled(true);
    }
    
    public patient_register2() {
        initComponents();
        blank_form();//set the function to clear the values
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        payment = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        minimize = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txt_price = new javax.swing.JTextField();
        listservice = new javax.swing.JLabel();
        paymentmethod = new javax.swing.JLabel();
        service = new javax.swing.JComboBox<>();
        rb_personal = new javax.swing.JRadioButton();
        rb_insurance = new javax.swing.JRadioButton();
        pricetext = new javax.swing.JLabel();
        txt_change = new javax.swing.JTextField();
        txt_checkup = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        paymenttotal = new javax.swing.JLabel();
        paymoney = new javax.swing.JLabel();
        changemoney = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        txt_money = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        time = new javax.swing.JComboBox<>();
        PhoneNum = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diseaseList = new javax.swing.JList<>();
        checkdate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_generate = new javax.swing.JButton();
        save_btn = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_receipt = new javax.swing.JTextArea();
        print = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(148, 194, 229));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(1280, 32767));

        jLabel13.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 18)); // NOI18N
        jLabel13.setText("Registration");

        exit.setBackground(new java.awt.Color(209, 222, 241));
        exit.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        exit.setText("X");
        exit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        minimize.setBackground(new java.awt.Color(209, 222, 241));
        minimize.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        minimize.setText("-");
        minimize.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizeActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(210, 221, 229));
        jPanel4.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(239, 239, 239));

        txt_price.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        txt_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_priceActionPerformed(evt);
            }
        });

        listservice.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        listservice.setText("List of Service");

        paymentmethod.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        paymentmethod.setText("Payment Method");

        service.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        service.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allergist", "Cardiologist", "Dermatologist", "Neurologists", "Pathologists", "Pulmanologists", "Radiologistis", "Family Physicians" }));
        service.setSelectedIndex(-1);
        service.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceActionPerformed(evt);
            }
        });

        payment.add(rb_personal);
        rb_personal.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        rb_personal.setText(" Personal");
        rb_personal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_personalActionPerformed(evt);
            }
        });

        payment.add(rb_insurance);
        rb_insurance.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        rb_insurance.setText(" Insurance");
        rb_insurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_insuranceActionPerformed(evt);
            }
        });

        pricetext.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        pricetext.setText("Price");

        txt_change.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N

        txt_checkup.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        txt_checkup.setMinimumSize(new java.awt.Dimension(64, 30));
        txt_checkup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_checkupActionPerformed(evt);
            }
        });
        txt_checkup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_checkupKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel5.setText("Total Checkup");

        paymenttotal.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        paymenttotal.setText("Total Payment");

        paymoney.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        paymoney.setText("Pay Money");

        changemoney.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        changemoney.setText("Change Money");

        txt_total.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });

        txt_money.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txt_money.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_moneyActionPerformed(evt);
            }
        });
        txt_money.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_moneyKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jLabel11.setText("Check Date");

        txtTime.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        txtTime.setText("Consul Time");

        time.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:00 AM", "11:00 AM", "12:00 PM", "13:00 PM", "14:00 PM", "15:00 PM", "16:00 PM", "17:00 PM", "18:00 PM", "19:00 PM", "20:00 PM", "21:00 PM", "22:00 PM", " " }));
        time.setSelectedIndex(-1);
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        PhoneNum.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        PhoneNum.setText("Disease Complaints");

        diseaseList.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        diseaseList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Cough", "Reddened skin", "red bumps", "red spots", "Itching on the skin that has a rash.", "Sneeze", "Flu", "Hard to breathe", "Wheezing", "Runny nose", "Swelling on the part of the body exposed to the allergy", "Red, watery and itchy eyes", "Nausea or vomiting", "Stomach pain or diarrhea", "Chest pain", "The pain radiates down the arm", "Dizzy", "Easily tired", "Snore", "Sweating", "Discolored patches of skin", "Dry skin", "Peeling skin", "Scaly or rough skin", "Tremors and seizures", "Muscle atrophy", "Talking so slurred", "Muscle stiffness", "Feeling Sad, Anxious, and Worried", "Feeling Depressed or Unhappy", "Emotional Explosion", "Sleep Disorders", "Changes in Weight or Appetite", "Quiet or Self-Isolated", "Drug abuse" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        diseaseList.setMaximumSize(new java.awt.Dimension(57, 200));
        jScrollPane1.setViewportView(diseaseList);

        checkdate.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        checkdate.setMaxSelectableDate(new java.util.Date(253370743298000L));
        checkdate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                checkdatePropertyChange(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/BimaSakti - Big Logo.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Matura MT Script Capitals", 1, 36)); // NOI18N
        jLabel3.setText("Bima Sakti Clinic");

        btn_generate.setBackground(new java.awt.Color(204, 255, 204));
        btn_generate.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btn_generate.setText("Generate Receipt");
        btn_generate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(132, 255, 132), 2));
        btn_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generateActionPerformed(evt);
            }
        });

        save_btn.setBackground(new java.awt.Color(153, 255, 255));
        save_btn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        save_btn.setText("Save");
        save_btn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 2, true));
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(226, 226, 255));
        reset.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        reset.setText("Reset");
        reset.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(181, 181, 255), 2));
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(195, 221, 247));
        cancel.setFont(new java.awt.Font("Rockwell", 1, 15)); // NOI18N
        cancel.setText("Back");
        cancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listservice, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNum)
                            .addComponent(paymentmethod)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rb_personal)
                                .addGap(18, 18, 18)
                                .addComponent(rb_insurance))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(time, javax.swing.GroupLayout.Alignment.LEADING, 0, 269, Short.MAX_VALUE)
                                .addComponent(service, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(checkdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(pricetext)
                            .addComponent(paymenttotal)
                            .addComponent(paymoney)
                            .addComponent(changemoney)
                            .addComponent(reset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_price, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(txt_checkup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_total)
                                    .addComponent(txt_money)
                                    .addComponent(txt_change)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(btn_generate, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pricetext, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_checkup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymenttotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(listservice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(service, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(paymentmethod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rb_personal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rb_insurance, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(paymoney, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_money, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(changemoney, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_change, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_generate, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                                .addGap(34, 34, 34))))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 900, 840));

        txt_receipt.setColumns(20);
        txt_receipt.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        txt_receipt.setRows(5);
        jScrollPane2.setViewportView(txt_receipt);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 220, 360, 350));

        print.setBackground(new java.awt.Color(255, 224, 224));
        print.setFont(new java.awt.Font("Lucida Bright", 1, 18)); // NOI18N
        print.setText("Print as PDF");
        print.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 150, 150), 2, true));
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        jPanel4.add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 620, 150, 40));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(exit)
                    .addComponent(minimize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
    }//GEN-LAST:event_formWindowOpened

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        
        
        System.exit(0);//used to terminate the Java application and exit the program. 
    }//GEN-LAST:event_exitActionPerformed

    private void minimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizeActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);//used to minimize a JFrame window.
    }//GEN-LAST:event_minimizeActionPerformed

    private void txt_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_priceActionPerformed

    private void serviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceActionPerformed
        // TODO add your handling code here:
        // create conditions to determine the price according to the service's choice
        if(service.getSelectedItem().equals("List of Service")){
            payment.clearSelection();
            txt_price.setText("");
        }
        else if (service.getSelectedItem().equals("Allergist")) {
            personal=150000;
            insurance=100000;
        }
        else if (service.getSelectedItem().equals("Cardiologist")) {
            personal=200000;
            insurance=150000;
        }
        else if (service.getSelectedItem().equals("Dermatologist")) {
            personal=300000;
            insurance=250000;
        }
        else if (service.getSelectedItem().equals("Neurologists")) {
            personal=150000;
            insurance=100000;
        }
        else if (service.getSelectedItem().equals("Pathologists")) {
            personal=200000;
            insurance=150000;
        }
        else if (service.getSelectedItem().equals("Pulmonologists")) {
            personal=400000;
            insurance=350000;
        }
        else if (service.getSelectedItem().equals("Radiologists")) {
            personal=500000;
            insurance=450000;
        }
        else if (service.getSelectedItem().equals("Family Physicians")) {
            personal=500000;
            insurance=300000;
         }
    }//GEN-LAST:event_serviceActionPerformed

    private void rb_personalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_personalActionPerformed
        // TODO add your handling code here:
       //displays the price after selecting the class type
        if(rb_personal.isSelected()){
            txt_price.setText(String.valueOf(personal));
            txt_total.setEnabled(false);
            txt_price.setEnabled(false);
          
        }
        else{
            blank_form();//clear the values
        }
    }//GEN-LAST:event_rb_personalActionPerformed

    private void rb_insuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_insuranceActionPerformed
        // TODO add your handling code here:
        //displays the price after selecting the class type
        if(rb_insurance.isSelected()){
            txt_price.setText(String.valueOf(insurance));//The text of the "txt_price" component is set to the value of a variable named "insurance" (presumably the cost of the insurance).
            txt_price.setEnabled(false); //components are disabled, meaning the user cannot edit their contents.
            txt_total.setEnabled(false);//components are disabled, meaning the user cannot edit their contents.
            txt_money.setEnabled(false);//components are disabled, meaning the user cannot edit their contents.
            txt_change.setEnabled(false);//components are disabled, meaning the user cannot edit their contents.
        }
        else{
            blank_form();//responsible for resetting the form or performing some other action to clear the data.
        }
    }//GEN-LAST:event_rb_insuranceActionPerformed

    private void txt_checkupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_checkupActionPerformed
        // TODO add your handling code here:
        // input the number of patient checkups and find out the total payment
        int checkup=Integer.parseInt(txt_checkup.getText());
        int price=Integer.parseInt(txt_price.getText());
        int total=money*price;
        txt_total.setText(String.valueOf(total));
    }//GEN-LAST:event_txt_checkupActionPerformed

    private void txt_checkupKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_checkupKeyReleased
        // TODO add your handling code here:
        
        //The code calculates the product of x and y, assigns it to z, and sets the text of the "txt_total" component to the value of z.
        int x, y, z;
        x=Integer.valueOf(txt_price.getText());
        y=Integer.valueOf(txt_checkup.getText());
        z=x*y;
        txt_total.setText(""+z);
    }//GEN-LAST:event_txt_checkupKeyReleased

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void txt_moneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_moneyActionPerformed
        // TODO add your handling code here:
       // input the number of patient checkups and find out the total payment
        money=Integer.parseInt(txt_money.getText());
        change=Integer.parseInt(txt_total.getText());
        total=money-change;
        txt_change.setText(String.valueOf(total));
    }//GEN-LAST:event_txt_moneyActionPerformed

    private void txt_moneyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_moneyKeyReleased
        // TODO add your handling code here:
        
        //The code calculates the difference between `u` and `v`, assigns it to `w`, and sets the text of the "txt_change" component to the value of `w`.
        int u, v, w;
        u=Integer.valueOf(txt_money.getText());
        v=Integer.valueOf(txt_total.getText());
        w=u-v;
        txt_change.setText(""+w);
    }//GEN-LAST:event_txt_moneyKeyReleased

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    private void btn_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generateActionPerformed
        // TODO add your handling code here:
          
        //The code creates a new Date object named obj. It then converts the Date object to a string representation using the toString() method and assigns it to the date variable.
          Date obj = new Date();
          String date = obj.toString();
          
          //If "rb_personal" is selected, its text is assigned to r; otherwise, the text of "rb_insurance" is assigned to r.
          String r = payment.getSelection().getActionCommand();
                if(rb_personal.isSelected()){
                    r = rb_personal.getText();
                } else{
                    r = rb_insurance.getText();
                }
          
          //the code formats a date using the specified pattern and assigns the formatted date string to the variable j.
          SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
          String j = sdf.format(checkdate.getDate());
        
        // to show receipt in the JTextArea 
        txt_receipt.setText(
            "============================================" +"\n"+ "\n" +
            "                             BIMA SAKTI CLINIC                      " +"\n"+ "\n" +
            "                    "+date+"                      " +"\n"+ "\n" +
            "============================================" +"\n"+
            "\n" +
            "Patient Name                  : "+a+"\n"+
            "Gender                           : "+b+"\n"+
            "Date of Birth                   : "+e+"\n"+
            "Phone Number                : "+g+"\n"+
            "Checkup Date                 : "+j+"\n"+
            "Checkup  Time                : "+time.getSelectedItem().toString()+"\n"+
            "Service                           : "+service.getSelectedItem().toString()+"\n"+
            "Disease Complaints         : "+diseaseList.getSelectedValue().toString()+"\n"+
            "Payment Method             :"+r+"\n"+
            "Price                              : "+txt_price.getText()+"\n"+
            "Total Checkup                 : "+txt_checkup.getText()+"\n"+
            "Total Payment                 : "+txt_total.getText()+"\n"+
            "Pay Money                     : "+txt_money.getText()+"\n"+
            "Change Money                : "+txt_change.getText()+"\n" +
            "\n" +
            "******************************************************************" +"\n"+ "\n" +
            "                               GET WELL SOON                      " +"\n"+ "\n" +
            "******************************************************************" +"\n"+ "\n"
        );
    }//GEN-LAST:event_btn_generateActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        
        //the code formats a date using the specified pattern and assigns the formatted date string to the variable j.
        SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
        String j = sdf.format(checkdate.getDate());
        
        //
        String k = time.getSelectedItem().toString();//assigns the selected item from a component named time as a string.And to convert it to a string representation.
        String l = service.getSelectedItem().toString();//assigns the selected item from a component named time as a string.And to convert it to a string representation.
        String m = diseaseList.getSelectedValue().toString();//assigns the selected value from a component named diseaseList as a string. and convert it to a string representation.
        String o = txt_price.getText();// assigns the text content from a text component 
        String p = txt_checkup.getText();// assigns the text content from a text component 
        String q = txt_total.getText();// assigns the text content from a text component
        
        // If "rb_personal" is selected, its text is assigned to n; otherwise, the text of "rb_insurance" is assigned to n.
        String n = payment.getSelection().getActionCommand();
                if(rb_personal.isSelected()){
                    n = rb_personal.getText();
                } else{
                    n = rb_insurance.getText();
                }
            
            Patient_menu menu = new Patient_menu();//creates a new instance of the Patient_menu class named menu
            //assigns values to various instance variables (a through q) of the menu object. The specific values assigned to these variables are not provided in the code
            menu.a = a;
            menu.b = b;
            menu.c = c;
            menu.d = d;
            menu.e = e;
            menu.f = f;
            menu.g = g;
            menu.h = h;
            menu.i = i;
            menu.j = j;
            menu.k = k;
            menu.l = l;
            menu.m = m;
            menu.n = n;
            menu.o = o;
            menu.p = p;
            menu.q = q;
            
            //sets the visibility of the menu object to true using the setVisible(true) method. This makes the GUI components associated with the menu object visible.
            menu.setVisible(true);
            //sets the visibility of the current GUI component (represented by this) to false using the setVisible(false) method. This hides the current GUI component.
            this.setVisible(false);
        
        try{
            
         //constructs an SQL INSERT statement with the table columns and values to be inserted. The values are concatenated from various variables (a through q) to form the SQL statement. The specific values of these variables are not provided in the code
         String sql = "INSERT INTO patient(pName, pGender, pEmail, pPlaceofBirth, pDoB, pIdentityNum, p_PhoneNum, pAddress, pProfession,"
                + "checkdate, pConsulTime, serviceList, pDisease, pPayment, price, checkup, total)"
                + "VALUES ('"+ a +"','"+ b +"',"
                +"'"+ c +"','"+ d +"',"
                +"'"+ e +"','"+ f +"',"
                +"'"+ g +"','"+ h +"',"
                +"'"+ i +"','"+ j +"',"
                +"'"+ k +"','"+ l +"',"
                +"'"+ m +"','"+ n +"',"
                +"'"+ o +"','"+ p +"',"
                +"'"+ q +"')";
         
                                //establishes a database connection by calling connect.getConnect(), assuming that there is a method named getConnect() in the connect object that returns a valid database connection.
                                java.sql.Connection conn= (Connection) connect.getConnect();
                                
                                //prepares a SQL statement using the java.sql.PreparedStatement interface with the constructed SQL INSERT statement.
                                java.sql.PreparedStatement pstm= conn.prepareStatement(sql);
                                pstm.execute();//It executes the SQL statement by calling the execute() method on the prepared statement object.
                                //If the execution is successful, a dialog box is displayed
                                JOptionPane.showMessageDialog(null,"Saving Data Successful");
        
        }catch(HeadlessException | SQLException e){
        //If an exception occurs during the execution, a dialog box is displayed using JOptionPane.showMessageDialog() with the error message retrieved from the exception (e.getMessage()).
        JOptionPane.showMessageDialog(this, e.getMessage());
        }
                 
    }//GEN-LAST:event_save_btnActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        //sets the selected item of the service component to null using the setSelectedItem(null) method. This clears the selected item in the component
        service.setSelectedItem(null);
        
        //perform some actions related to resetting or clearing form fields or components.
        blank_form();
        
    }//GEN-LAST:event_resetActionPerformed

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:
        blank_form();//perform some actions related to resetting or clearing form fields or components.
    }//GEN-LAST:event_resetMouseClicked

    private void checkdatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_checkdatePropertyChange
        // TODO add your handling code here:
        
    //the code checks if a date is selected in the checkdate component, formats the date using a specific pattern, but doesn't utilize or store the formatted date string.
    if(checkdate.getDate()!=null){
            SimpleDateFormat sdf = new SimpleDateFormat("MMM d, y");
            sdf.format(checkdate.getDate());
        }
    }//GEN-LAST:event_checkdatePropertyChange

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        
        // the code attempts to print the content of the txt_receipt component and displays appropriate messages to indicate the success or failure of the printing process.
        try{
            txt_receipt.print();
            JOptionPane.showMessageDialog(null,"Print as PDF Successful");
            
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
    }//GEN-LAST:event_printActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        this.dispose();// used to release system resources associated with the window and remove it from the screen.
        patient_register1 w = new patient_register1();//create a new instance of the patient_register1 class named w.
        w.setVisible(true);//sets the visibility of the w object to true using the setVisible(true) method. This makes the GUI components associated with the w object visible.
        this.setVisible(false);//This hides the current window.
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patient_register2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patient_register2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patient_register2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patient_register2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patient_register2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PhoneNum;
    private javax.swing.JButton btn_generate;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel changemoney;
    private com.toedter.calendar.JDateChooser checkdate;
    private javax.swing.JList<String> diseaseList;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel listservice;
    private javax.swing.JButton minimize;
    private javax.swing.ButtonGroup payment;
    private javax.swing.JLabel paymentmethod;
    private javax.swing.JLabel paymenttotal;
    private javax.swing.JLabel paymoney;
    private javax.swing.JLabel pricetext;
    private javax.swing.JButton print;
    private javax.swing.JRadioButton rb_insurance;
    private javax.swing.JRadioButton rb_personal;
    private javax.swing.JButton reset;
    private javax.swing.JButton save_btn;
    private javax.swing.JComboBox<String> service;
    private javax.swing.JComboBox<String> time;
    private javax.swing.JLabel txtTime;
    private javax.swing.JTextField txt_change;
    private javax.swing.JTextField txt_checkup;
    private javax.swing.JTextField txt_money;
    private javax.swing.JTextField txt_price;
    private javax.swing.JTextArea txt_receipt;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables

    private static class simpleDateFormat {

        public simpleDateFormat() {
        }
    }
}
