/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manik Kartika
 */
public class managepatient extends javax.swing.JFrame {

        // reset/clear the edit field
        private void blank_form(){
	nid.setEditable(true);
	nid.setText(null);
	name.setText(null);
	profession.setSelectedItem(this);
	address.setText(null);
	email.setText(null);
	phonenum.setText(null);
        placeofbirth.setText(null);
        gender.clearSelection();
        dob.setDate(null);
    }
        
        // to set and show table
        private void showdata(){
            DefaultTableModel model = new DefaultTableModel();//creates a new instance
            //adds ten columns with the specified header labels
            model.addColumn("No.");
            model.addColumn("Full Name");
            model.addColumn("Gender");
            model.addColumn("Email");
            model.addColumn("Birth Place");
            model.addColumn("Date of Birth");
            model.addColumn("National ID");
            model.addColumn("Phone Number");
            model.addColumn("Address");
            model.addColumn("Profession");
            //etrieving data from a database table and populating a DefaultTableModel
            try{
                int num = 1;
                String sql = "Select * From patient";
                java.sql.Connection conn= (Connection) Koneksi.getKoneksi();
                java.sql.PreparedStatement pstm= conn.prepareStatement(sql);
                java.sql.ResultSet res = pstm.executeQuery(sql);
                
                while (res.next()){
			model.addRow(new Object[]{num++,res.getString(1), res.getString(2),
			res.getString(3),res.getString(4),res.getString(5),res.getString(6),
                        res.getString(7),res.getString(8),res.getString(9)});
                        
		}
                tablemanagepatient.setModel(model); //To set the model as the model for the tablemanagepatient
            }catch(SQLException e){ //print the exception message in detail
                System.out.println("SQLException: " + e.getMessage());
                System.out.println("SQLState: " + e.getSQLState());
                System.out.println("VendorError: " + e.getErrorCode());
            }
        }
        
        //function to get the value date from table
        public static Date getDateFromTable(JTable table, int column){
        JTable tabel = table;//pass the JTable instance 
        String str_dt = String.valueOf(tabel.getValueAt(tabel.getSelectedRow(), column));// column index as arguments
        Date calendar = null;
        try{//Make sure to import the necessary classes
        calendar = (Date) new SimpleDateFormat ("yyyy-MM-dd").parse(str_dt);
        }catch (ParseException ex){
        Logger.getLogger(managepatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        return calendar;//return the Date object corresponding to the value in the specified column
        }
        
        //calls method
        public managepatient() {
        initComponents();
        showdata();
        blank_form();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        minimizebtn = new javax.swing.JButton();
        exitbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        scollpane = new javax.swing.JScrollPane();
        tablemanagepatient = new javax.swing.JTable();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        placeofbirth = new javax.swing.JTextField();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        nid = new javax.swing.JTextField();
        phonenum = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        profession = new javax.swing.JComboBox<>();
        editbtn = new javax.swing.JButton();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        leftArrow = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(210, 221, 229));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(148, 194, 229));

        minimizebtn.setBackground(new java.awt.Color(238, 255, 255));
        minimizebtn.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        minimizebtn.setText("-");
        minimizebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizebtnMouseClicked(evt);
            }
        });
        minimizebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimizebtnActionPerformed(evt);
            }
        });

        exitbtn.setBackground(new java.awt.Color(238, 255, 255));
        exitbtn.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        exitbtn.setText("X");
        exitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 18)); // NOI18N
        jLabel2.setText("Manage Patient");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minimizebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(210, 221, 229));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scollpane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scollpaneMouseClicked(evt);
            }
        });

        tablemanagepatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablemanagepatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablemanagepatientMouseClicked(evt);
            }
        });
        scollpane.setViewportView(tablemanagepatient);

        updatebtn.setBackground(new java.awt.Color(220, 255, 242));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(248, 125, 130));
        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Email");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Place / Date of Birth");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("National ID");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Phone Number");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Address");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Profession");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        gender.add(male);
        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        gender.add(female);
        female.setText("Female");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("/");

        nid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nidActionPerformed(evt);
            }
        });
        nid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nidKeyTyped(evt);
            }
        });

        phonenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenumActionPerformed(evt);
            }
        });
        phonenum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phonenumKeyTyped(evt);
            }
        });

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        profession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Working", "Doesn't work", "Student", "Other" }));
        profession.setSelectedIndex(-1);

        editbtn.setBackground(new java.awt.Color(220, 255, 242));
        editbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editbtn.setText("Edit");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        dob.setDateFormatString("yyyy-MM-dd");
        dob.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(scollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(address)
                                    .addComponent(phonenum)
                                    .addComponent(nid)
                                    .addComponent(profession, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(placeofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(male)
                                        .addGap(32, 32, 32)
                                        .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(email)
                                    .addComponent(name)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(deletebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editbtn)))
                .addGap(42, 42, 42))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(male)
                            .addComponent(female))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(placeofbirth, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel12))
                            .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nid, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(phonenum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(profession)
                                        .addGap(2, 2, 2))))))
                    .addComponent(scollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 1050, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 35)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/e704c7e4-d58f-4cd6-9976-ae4d8b453d1f-removebg-preview 200.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 16, 177, 142));

        jLabel1.setFont(new java.awt.Font("Matura MT Script Capitals", 1, 36)); // NOI18N
        jLabel1.setText("Bima Sakti Clinic");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 164, -1, -1));

        search.setBackground(new java.awt.Color(232, 232, 232));
        search.setBorder(null);
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        jPanel2.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 190, 20));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/Desain_tanpa_judul-removebg-preview.png"))); // NOI18N
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 219, -1, 67));

        leftArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/rsz_3leftarrow-removebg-preview.png"))); // NOI18N
        leftArrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftArrowMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                leftArrowMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                leftArrowMousePressed(evt);
            }
        });
        jPanel2.add(leftArrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1095, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizebtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_minimizebtnMouseClicked

    private void minimizebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimizebtnActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizebtnActionPerformed

    private void exitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitbtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitbtnActionPerformed

    private void scollpaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scollpaneMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_scollpaneMouseClicked

    private void tablemanagepatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablemanagepatientMouseClicked
        // TODO add your handling code here:
        // transfer the value table to the edit field by click
        
        //retrieves the row index of the clicked point in the table
        int row= tablemanagepatient.rowAtPoint(evt.getPoint());
        //gets the value at the specified row and column and converts it to a string
        String patient_name = tablemanagepatient.getValueAt(row,1).toString();
        //This line sets the patient_name as the text
        name.setText(patient_name);
        
        // get patient gender to the radio button    
        if ("Female".equals(tablemanagepatient.getValueAt(row, 2).toString())){
            female.setSelected(true);
        }else{
            male.setSelected(true);
        }
        
        // get patient email to text
        String patient_email= tablemanagepatient.getValueAt(row,3).toString();
        email.setText(patient_email);
        
        //get placeofbirth to text
        String patient_placeofbirth= tablemanagepatient.getValueAt(row,4).toString();
        placeofbirth.setText(patient_placeofbirth);
        
        //get patient DoB and set to JCalendar
        dob.setDate(getDateFromTable(tablemanagepatient,5));
        
        // get patient id to text
        String patient_id= tablemanagepatient.getValueAt(row,6).toString();
        nid.setText(patient_id);
        
        //get patient phone number to text
        String patient_phonenum= tablemanagepatient.getValueAt(row,7).toString();
        phonenum.setText(patient_phonenum);
        
        //get patient address to text
        String patient_address= tablemanagepatient.getValueAt(row,8).toString();
        address.setText(patient_address);
        
        //get patient profession and set selected item
        String patient_profession= tablemanagepatient.getValueAt(row,9).toString();
        profession.setSelectedItem(patient_profession);
               
    }//GEN-LAST:event_tablemanagepatientMouseClicked

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        // delete row include the data in the table that connected to database
        try{
         String sql = "DELETE FROM patient WHERE pName = '"+ name.getText() +"'";
         
         //handling the connection
         java.sql.Connection conn= (Connection) Koneksi.getKoneksi();
         java.sql.PreparedStatement pstm= conn.prepareStatement(sql);
         pstm.execute();
         
         //show message dialog
         JOptionPane.showMessageDialog(null,"Delete data successful"); //if sucessfull
       }catch(HeadlessException | SQLException e){
         JOptionPane.showMessageDialog(this, e.getMessage());//if there is an error
        }
	showdata();//show data in table after deleting         
    }//GEN-LAST:event_deletebtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        
        //for refresh the table, and show the table
        DefaultTableModel model = (DefaultTableModel) tablemanagepatient.getModel();
        model.setRowCount(0);
        try {
            showdata();
            JOptionPane.showMessageDialog(null, "UPDATE DATA SUCCESSFUL"); // if successdul refresh
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());// if failed show an error message
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void nidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nidActionPerformed

    private void phonenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenumActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
        
        //handling date format
        String tampilan ="yyyy-MM-dd";
        SimpleDateFormat fm = new SimpleDateFormat(tampilan);
        String calendar = String.valueOf(fm.format(dob.getDate()));
               
        //handling radiobutton gender
        String patient_gender = null;
        if (male.isSelected()) {
        patient_gender = male.getText();
        } else if (female.isSelected()) {
        patient_gender = female.getText();
        }
        
        //edit value of table managepatient
        try{
         String sql = "UPDATE patient SET pName=?, pGender=?, pEmail=?, pPlaceofBirth=?, pDoB=?, pIdentityNum=?, pAddress=?, p_PhoneNum=? WHERE pProfession=?";

        // Assuming you're using a PreparedStatement, prepare the statement
            java.sql.Connection conn= (Connection) Koneksi.getKoneksi();
            java.sql.PreparedStatement pstm= conn.prepareStatement(sql);

        // Set the parameter values
        pstm.setString(1, name.getText());
        pstm.setString(2, patient_gender);
        pstm.setString(3, email.getText());
        pstm.setString(4, placeofbirth.getText());
        pstm.setDate(5, java.sql.Date.valueOf(calendar));
        pstm.setString(6, nid.getText());
        pstm.setString(7, address.getText());
        pstm.setString(8, phonenum.getText());
        pstm.setString(9, profession.getSelectedItem().toString());

        // Execute the update
        pstm.execute();
         JOptionPane.showMessageDialog(null,"Edit data successful");
        }catch(HeadlessException | SQLException e){
         JOptionPane.showMessageDialog(this, e.getMessage());
        }
	showdata();//to show table after editing
        blank_form();//reset/clear the edit field
    }//GEN-LAST:event_editbtnActionPerformed

    private void nidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nidKeyTyped
        // TODO add your handling code here:
        //mandatory integer value
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_nidKeyTyped

    private void phonenumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phonenumKeyTyped
        // TODO add your handling code here:
        //mandatory integer value
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)|| c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_phonenumKeyTyped

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed
  
    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        // searching and showing data according to the text written
        String field = search.getText().trim();

    // Removing previous rows in the table
    DefaultTableModel model = (DefaultTableModel) tablemanagepatient.getModel();
    model.setRowCount(0);

    if (field.isEmpty()) {
        showdata(); // Show all data if the search field is empty
    } else {
        try {
            // Connect and fetch data from the database
            Connection conn = (Connection) Koneksi.getKoneksi();
            String query = "SELECT * FROM `patient` WHERE pName LIKE ? OR pGender LIKE ? OR pEmail LIKE ? "
                    + "OR pPlaceofBirth LIKE ? OR pDoB LIKE ? OR pIdentityNum LIKE ? OR p_PhoneNum LIKE ? "
                    + "OR pAddress LIKE ? OR pProfession LIKE ?;";
            PreparedStatement pstm = conn.prepareStatement(query);

            // Set the search parameters
            for (int i = 1; i <= 9; i++) {
                pstm.setString(i, "%" + field + "%");
            }

            ResultSet rs = pstm.executeQuery();

            // Inserting rows while the result set is not empty
            int rowNumber = 1;
            while (rs.next()) {
                Object[] rowData = new Object[10];
                rowData[0] = rowNumber++;
                rowData[1] = rs.getString(1);
                rowData[2] = rs.getString(2);
                rowData[3] = rs.getString(3);
                rowData[4] = rs.getString(4);
                rowData[5] = rs.getString(5);
                rowData[6] = rs.getString(6);
                rowData[7] = rs.getString(7);
                rowData[8] = rs.getString(8);
                rowData[9] = rs.getString(9);

                model.addRow(rowData);
            }
        } catch (SQLException ex) {//print the exception message dialog
            JOptionPane.showMessageDialog(null, "Database Error!");
        }
    }

    }//GEN-LAST:event_searchKeyReleased

    private void leftArrowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftArrowMouseClicked
        // TODO add your handling code here:
        //to close current window
        this.dispose();
        //go to next page 
        AdminPanel_menu m = new AdminPanel_menu();
        m.setVisible(true);
        this.setVisible(false);
   
    }//GEN-LAST:event_leftArrowMouseClicked

    private void leftArrowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftArrowMousePressed
        // TODO add your handling code here:
         leftArrow.setBackground(new Color (93,170,229));
    }//GEN-LAST:event_leftArrowMousePressed

    private void leftArrowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftArrowMouseEntered
        // TODO add your handling code here:
        leftArrow.setBackground(new Color (93,170,229));
    }//GEN-LAST:event_leftArrowMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managepatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managepatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managepatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managepatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managepatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton deletebtn;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JButton editbtn;
    private javax.swing.JTextField email;
    private javax.swing.JButton exitbtn;
    private javax.swing.JRadioButton female;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel leftArrow;
    private javax.swing.JRadioButton male;
    private javax.swing.JButton minimizebtn;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nid;
    private javax.swing.JTextField phonenum;
    private javax.swing.JTextField placeofbirth;
    private javax.swing.JComboBox<String> profession;
    private javax.swing.JScrollPane scollpane;
    private javax.swing.JTextField search;
    private javax.swing.JTable tablemanagepatient;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel DefaultTableModel() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private java.util.Date patient_dob(JTable tablemanagepatient, int i) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
